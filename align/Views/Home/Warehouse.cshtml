﻿@{
    Layout = null; // This line ensures that the layout is not applied to this specific view
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>
    <link rel="stylesheet" href="/css/main.css">
    <link rel="stylesheet" href="/css/stok-yonetim.css">



    <title>Envanterim</title>

</head>
<body>

    <div class="top-bar">
        <div class="user-info">
            <span class="material-icons user-icon">account_circle</span>
            <span id="userInfo">Super Admin</span>
            <div id="clock" class="clock" style="margin-left: 10px;"></div>
            <button class="logout-btn" style="margin-left: 90px;" id="logoutButton">Çıkış</button>

        </div>
    </div>
    <br>
    <div class="navbar" style="padding-top: 80px;">

        @if (ViewBag.UserRole == "Admin")
        {
            <a href="/Home/Index"><span class="material-icons">home</span>Dashboard</a>
        }

        <a href="/Home/Orders"><span class="material-icons">shopping_cart</span>Sipariş Yönetimi</a>

        @if (ViewBag.UserRole == "Admin")
        {
            <a href="/Home/Stocks"><span class="material-icons">storage</span>Stok Yönetimi</a>
        }

        @if (ViewBag.UserRole == "Manager")
        {
            <a href="/Home/Warehouse"><span class="material-icons">warehouse</span>Envanterim</a>
        }

        @if (ViewBag.UserRole == "Admin")
        {
            <a href="/Home/Report"><span class="material-icons">bar_chart</span>Sipariş Raporları</a>
            <a href="/Home/Settings"><span class="material-icons">manage_accounts</span>Kullanıcı Yönetimi</a>
        }

    </div>

    <div class="container">
        <h1>Envanterim</h1>

        <button id="newStockBtn">Yeni Depo Ekle</button>
        <button id="downloadPdfBtn">Depo Raporu İndir</button>

        <table id="stockTable">
            <thead>
                <tr>
                    <th>Depo Adı</th>
                    <th>Ürün Adı</th>
                    <th>Stok Kodu</th>
                    <th>Stok Adeti</th>
                    <th>Bölge Müdürü</th>
                    <th>İşlemler</th>
                </tr>
            </thead>
            <tbody>
                <!-- Stoklar buraya dinamik olarak eklenecek -->
            </tbody>
        </table>
    </div>

    <div class="modal" id="stockModal">
        <div class="modal-content">
            <span class="close" id="closeModal">&times;</span>
            <!-- Stok formu buraya gelecek -->

        </div>
    </div>
    <script>
        // Fetch user information from the API
        fetch('/User/GetSessionUserInfo', {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
                //'Cookie': '.AspNetCore.Identity.Application=CfDJ8Ps9n1LyAgZFs_1wUVrKLmoRvtGP-QarbQ2o8Pi9rpM89lLWvR4MpgNxr51My_qMb5qHx5tSf-ocunmVcF_2JUkvOFNPssjVcBz46dc0NYCItWzsTIZpu8ascsBztP3oOS51LPVLQFBX3XJk01fJysWb8X8xvDLtenouIQnAZ-01EM8OzoTLoeOBw_Bxhk7kt77hrNol7pOqDg-PXZSzBBMl6RZEwVSbRvodFxzymrap9sbNeP95jLjlhv9g2wpP69Gy76KEWymkwt39jtA8jJ64PIW66E4Z2Bh_q6fhPj_vACs1-HIyd7gLSkrn_QYDqgKiW-zCVABbuTMk5RyPQK8oJig0qmIFFp8qUirlZ479GCVzmE1seNanfsaAeTtqq8F3zG1KriaD6kydfkN72rDrAIt1YyG34raowjlcscsHhwSh35rekBryCemj7kQzy8CQLWPS5k3RH4cG2b_4DxNZfdL-BZcPgOFDveF28PISDSr0P8z0v5-XeWPpmzFxGF5tMW9ncm7A9ybjFuVHmKKAUd5aeU_RvKBaINSXPSw4NhcWR1MBAAycLxpoFKoiPbA2WYq90ATpF7O3Jhg2G7u9N1QjtK4FVWUalm5-rdPH3WqH_yK9IyTS_jqya_akWt481zjJfsZIvpcrGnFbEoKHbUowQVbYdg4_RMS_pERpqs5koK-uAFvdpEUjmMqiY7NZjiBxEdEWK-wefUjfCBSxOJ-Fffaqo6JDWq4Bmjbhp2YT233Cume3q5EmWiEkTYqhCZeG1HL9JdEWMVDMfBDrw56hGeTcDVoNQJe2_yxCc0ia3eXLaVO-UNXBZajgYA'
            },
        })
            .then(response => response.json())
            .then(data => {

                const fullName = `${data.data.firstName} ${data.data.lastName}`;
                document.getElementById('userInfo').textContent = fullName;
            })
            .catch(error => console.error('Error fetching user information:', error));
    </script>

    <script>
        document.getElementById('logoutButton').addEventListener('click', function () {
            // Call the logout API
            fetch('/Auth/Logout', {
                method: 'GET',
            })
                .then(response => {
                    if (response.ok) {
                        // Redirect to the login page after successful logout
                        window.location.href = '/Auth/Login';
                    } else {
                        // Handle errors if needed
                        console.error('Logout failed:', response.status);
                    }
                })
                .catch(error => {
                    // Handle network errors
                    console.error('Network error during logout:', error);
                });
        });
    </script>

</body>
</html>







<script>
    function updateClock() {
        var now = new Date();
        var hours = now.getHours().toString().padStart(2, '0');
        var minutes = now.getMinutes().toString().padStart(2, '0');
        var seconds = now.getSeconds().toString().padStart(2, '0');
        var dateStr = now.toLocaleDateString('tr-TR');
        var timeStr = hours + ':' + minutes + ':' + seconds;
        document.getElementById('clock').innerText = dateStr + ' ' + timeStr;
    }

    setInterval(updateClock, 1000);
</script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const stockTable = document.getElementById('stockTable');
        const newStockBtn = document.getElementById('newStockBtn');
        const stockModal = document.getElementById('stockModal');
        const closeModalBtn = document.getElementById('closeModal');

        newStockBtn.addEventListener('click', openModal);
        closeModalBtn.addEventListener('click', closeModal);

        // Örnek stok verileri
        const stocks = [
            { depoName: 'Depo 1', productName: 'Ürün 1', stockCode: 'ABC123', stockAmount: 100, boxAmount: 10 },
            { depoName: 'Depo 1', productName: 'Ürün 2', stockCode: 'XYZ789', stockAmount: 50, boxAmount: 5 },
            // Daha fazla stok ekleyebilirsiniz
        ];

        // Stokları tabloya ekle
        displayStocks();

        function displayStocks() {
            const tbody = stockTable.querySelector('tbody');
            tbody.innerHTML = '';

            stocks.forEach((stock, index) => {
                const row = document.createElement('tr');
                row.innerHTML = `
                     <td>${stock.depoName}</td>
                    <td>${stock.productName}</td>
                    <td>${stock.stockCode}</td>
                    <td>${stock.stockAmount}</td>
                    <td>${stock.boxAmount}</td>
                    <td>
                        <button onclick="viewStock(${index})">Görüntüle</button>
                        <button onclick="editStock(${index})">Düzenle</button>
                        <button onclick="deleteStock(${index})">Sil</button>
                    </td>
                `;

                tbody.appendChild(row);
            });
        }

        function openModal() {
            // Stok ekleme formunu burada göster
            const modalContent = stockModal.querySelector('.modal-content');
            modalContent.innerHTML = `
                <span class="close" id="closeModal">&times;</span>
                <form id="stockForm">
                    <label for="depoName">Depo Adı:</label>
                    <input type="text" id="depoName" required><br>
                    <label for="productName">Ürün Seç:</label>
                    <input type="text" id="productName" required><br>

                    <label for="stockCode">Stok Kodu:</label>
                    <input type="text" id="stockCode" required><br>

                    <label for="stockAmount">Stok Adeti:</label>
                    <input type="number" id="stockAmount" required><br>

                    <label for="name">Bölge Müdürü</label>
                    <input type="text" id="name" required><br>

                    <button type="button" onclick="saveStock()">Kaydet</button>
                </form>
            `;

            stockModal.style.display = 'flex';
            closeModalBtn.addEventListener('click', closeModal);
        }

        function closeModal() {
            stockModal.style.display = 'none';
        }

        window.onclick = function (event) {
            if (event.target === stockModal) {
                closeModal();
            }
        };

        window.viewStock = function (index) {
            // Görüntüleme işlemi burada yapılabilir
            alert(`Ürün Adı: ${stocks[index].productName}\nStok Kodu: ${stocks[index].stockCode}\nStok Adeti: ${stocks[index].stockAmount}\nKoli Adeti: ${stocks[index].name}`);
        };

        window.editStock = function (index) {
            // Düzenleme işlemi burada yapılabilir
            const selectedStock = stocks[index];
            const stockForm = document.getElementById('stockForm');
            const productNameInput = document.getElementById('productName');
            const stockCodeInput = document.getElementById('stockCode');
            const stockAmountInput = document.getElementById('stockAmount');
            const boxAmountInput = document.getElementById('boxAmount');

            productNameInput.value = selectedStock.productName;
            stockCodeInput.value = selectedStock.stockCode;
            stockAmountInput.value = selectedStock.stockAmount;
            boxAmountInput.value = selectedStock.boxAmount;

            // Düzenleme formunu göster
            openModal();

            // Düzenleme işlemini kaydetme
            document.getElementById('stockForm').addEventListener('submit', function (event) {
                event.preventDefault();
                selectedStock.productName = productNameInput.value;
                selectedStock.stockCode = stockCodeInput.value;
                selectedStock.stockAmount = stockAmountInput.value;
                selectedStock.boxAmount = boxAmountInput.value;

                // Tabloyu güncelle
                displayStocks();
                closeModal();
            });
        };

        window.deleteStock = function (index) {
            // Silme işlemi burada yapılabilir
            if (confirm('Bu stoku silmek istediğinizden emin misiniz?')) {
                stocks.splice(index, 1);
                // Tabloyu güncelle
                displayStocks();
            }
        };

        window.saveStock = function () {
            // Yeni stok eklemek için burada işlemler yapılabilir
            const stockForm = document.getElementById('stockForm');
            const productNameInput = document.getElementById('productName');
            const stockCodeInput = document.getElementById('stockCode');
            const stockAmountInput = document.getElementById('stockAmount');
            const boxAmountInput = document.getElementById('boxAmount');

            const newStock = {
                productName: productNameInput.value,
                stockCode: stockCodeInput.value,
                stockAmount: stockAmountInput.value,
                boxAmount: boxAmountInput.value
            };

            stocks.push(newStock);

            // Tabloyu güncelle
            displayStocks();
            closeModal();
        };
    });


</script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // ... Diğer kodlar ...

        const downloadPdfBtn = document.getElementById('downloadPdfBtn');
        downloadPdfBtn.addEventListener('click', downloadStocksPdf);

        // ... Diğer kodlar ...

        function downloadStocksPdf() {
            const pdf = new jsPDF();

            pdf.text('Stok Yönetimi', 20, 20);
            pdf.autoTable({
                head: [['Ürün Adı', 'Stok Kodu', 'Stok Adeti', 'Koli Adeti']],
                body: stocks.map(stock => [stock.productName, stock.stockCode, stock.stockAmount, stock.boxAmount]),
            });

            pdf.save('Stoklar.pdf');
        }
    });
</script>
