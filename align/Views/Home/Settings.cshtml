@using align.Models.User;
@model List<UserModel>

@{
    Layout = null; // This line ensures that the layout is not applied to this specific view
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/styles.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <link rel="stylesheet" href="/css/main.css">
    <link rel="stylesheet" href="/css/users.css"> 
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css">

    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>

    <title>Kullanıcı Yönetimi</title>
    <style>

    </style>
</head>

<body>
    <header>
        <div class="top-bar">
            <div class="user-info">
                <span class="material-icons user-icon">account_circle</span>
                <span id="userInfo">Super Admin</span>
                <div id="clock" class="clock" style="margin-left: 10px;"></div>
                <button class="logout-btn" style="margin-left: 90px;" id="logoutButton">Çıkış</button>

            </div>
        </div>
        <br>
        <div class="navbar">
            <a href="/Home/Index"><span class="material-icons">home</span>Dashboard</a>
            <a href="/Home/Orders"><span class="material-icons">shopping_cart</span>Ürün ve Sipariş Yönetimi</a>
            <a href="/Home/Stocks"><span class="material-icons">storage</span>Stok Yönetimi</a>
            <a href="/Home/Warehouse"><span class="material-icons">warehouse</span>Depo Yönetimi</a>
            <a href="/Home/Report"><span class="material-icons">bar_chart</span>Sipariş Raporları</a>
            <a href="/Home/Settings"><span class="material-icons">manage_accounts</span>Kullanıcı Yönetimi</a>
        </div>
    </header>
    <div class="container">
        <h2>Kullanıcı Yönetimi</h2>

        <table>
            <thead>
                <tr>
                    <th>Ad Soyad</th>
                    <th>Email</th>
                    <th>Telefon Numarası</th>
                    <th>Bölge Müdürü</th>
                    <th>İşlemler</th>
                </tr>
            </thead>
            <tbody id="userList">
                @foreach (var user in Model)
                {
                    <tr>
                        <td>@user.FirstName @user.LastName</td>
                        <td>@user.Email</td>
                        <td>@user.PhoneNumber</td>
                        @if (!user.IsSuperAdmin)
                        {
                            <td> Evet </td>
                        }
                        else
                        {
                            <td> Hayır </td>
                        }
                        <td>
                            <button type="button" class="btn btn-warning" data-toggle="modal" data-target="#userUpdateModal" onclick="openUpdateModal('@user.Id', '@user.FirstName', '@user.LastName', '@user.Email', '@user.PhoneNumber', '@user.IsSuperAdmin')">Güncelle</button>
                            <button type="button" class="btn btn-danger">Sil</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <script>
            function openUpdateModal(id, firstName, lastName, email, phoneNumber, isSuperAdmin) {

                console.log('isSuperAdmin: ', isSuperAdmin);

                document.getElementById('userFirstNameUpdate').value = firstName;
                document.getElementById('userLastNameUpdate').value = lastName;
                document.getElementById('userEmailUpdate').value = email;
                document.getElementById('userPhoneNumberUpdate').value = phoneNumber;
                //document.getElementById('isRegionManagerUpdate').checked = isSuperAdmin;

                document.getElementById('userIdUpdate').value = id;

                $('#userUpdateModal').modal('show');
            }
        </script>

        <div class="actions">
            <button class="add-btn" data-toggle="modal" data-target="#addUserModal">Kullanıcı Ekle</button>
            <button class="view-btn">Kullanıcıları İndir (PDF)</button>
        </div>
    </div>

    <!-- Kullanıcı Ekle Modal -->
    <div class="modal fade" id="addUserModal" tabindex="-1" role="dialog" aria-labelledby="addUserModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="addUserModalLabel">Kullanıcı ekle</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="container mt-5">
                        <form id="addUserForm">
                            <div class="form-group">
                                <label for="userFirstName">İsim</label>
                                <input type="text" class="form-control" id="userFirstName" placeholder="İsim" required>
                            </div>
                            <div class="form-group">
                                <label for="userLastName">Soyisim</label>
                                <input type="text" class="form-control" id="userLastName" placeholder="Soyisim" required>
                            </div>
                            <div class="form-group">
                                <label for="userEmail">Email</label>
                                <input type="email" class="form-control" id="userEmail" placeholder="Email" required>
                            </div>
                            <div class="form-group">
                                <label for="userPhoneNumber">Telefon Numarası</label>
                                <input type="text" class="form-control" id="userPhoneNumber" placeholder="Telefon Numarası" required>
                            </div>
                            <div class="form-group">
                                <label for="isRegionManager">Bölge Müdürü</label>
                                <input type="checkbox" class="form-check" id="isRegionManager" required>
                            </div>
                            <div class="form-group">
                                <label for="userPassword">Şifre</label>
                                <input type="password" class="form-control" id="userPassword" placeholder="Şifre" required>
                            </div>
                            <div class="modal-footer">
                                <button type="submit" class="btn btn-primary" id="addUserButton">Kaydet</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Ürün güncelle modal -->
    <div class="modal fade" id="userUpdateModal" tabindex="-1" role="dialog" aria-labelledby="userUpdateModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="userUpdateModalLabel">Ürün Güncelle</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="container mt-5">
                        <!-- Update Form -->
                        <form id="updateForm" asp-action="UpdateUser" asp-controller="Home" method="post">
                            <input type="hidden" name="Id" id="userIdUpdate" value="">
                            <div class="form-group">
                                <label for="userFirstNameUpdate">İsim</label>
                                <input type="text" class="form-control" name="FirstName" id="userFirstNameUpdate" placeholder="İsim" required>
                            </div>
                            <div class="form-group">
                                <label for="userLastNameUpdate">Soyisim</label>
                                <input type="text" class="form-control" name="LastName" id="userLastNameUpdate" placeholder="Soyisim" required>
                            </div>
                            <div class="form-group">
                                <label for="userEmailUpdate">Email</label>
                                <input type="email" class="form-control" name="Email" id="userEmailUpdate" placeholder="Email" required>
                            </div>
                            <div class="form-group">
                                <label for="userPhoneNumberUpdate">Telefon Numarası</label>
                                <input type="text" class="form-control" name="PhoneNumber" id="userPhoneNumberUpdate" placeholder="Telefon Numarası" required>
                            </div>
                            <div class="form-group">
                                <label for="userRole">Rol</label>
                                <select class="form-control" id="userRole" name="UserRole" required>
                                    <option value="">Seçiniz...</option>
                                    <option value="Admin">Admin</option>
                                    <option value="Bölge Müdürü">Bölge Müdürü</option>
                                </select>
                            </div>
                            <div class="modal-footer">
                                <button type="submit" class="btn btn-primary" id="updateUserButton">Güncelle</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
    <script>
        // Fetch user information from the API
        fetch('/User/GetSessionUserInfo', {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
                //'Cookie': '.AspNetCore.Identity.Application=CfDJ8Ps9n1LyAgZFs_1wUVrKLmoRvtGP-QarbQ2o8Pi9rpM89lLWvR4MpgNxr51My_qMb5qHx5tSf-ocunmVcF_2JUkvOFNPssjVcBz46dc0NYCItWzsTIZpu8ascsBztP3oOS51LPVLQFBX3XJk01fJysWb8X8xvDLtenouIQnAZ-01EM8OzoTLoeOBw_Bxhk7kt77hrNol7pOqDg-PXZSzBBMl6RZEwVSbRvodFxzymrap9sbNeP95jLjlhv9g2wpP69Gy76KEWymkwt39jtA8jJ64PIW66E4Z2Bh_q6fhPj_vACs1-HIyd7gLSkrn_QYDqgKiW-zCVABbuTMk5RyPQK8oJig0qmIFFp8qUirlZ479GCVzmE1seNanfsaAeTtqq8F3zG1KriaD6kydfkN72rDrAIt1YyG34raowjlcscsHhwSh35rekBryCemj7kQzy8CQLWPS5k3RH4cG2b_4DxNZfdL-BZcPgOFDveF28PISDSr0P8z0v5-XeWPpmzFxGF5tMW9ncm7A9ybjFuVHmKKAUd5aeU_RvKBaINSXPSw4NhcWR1MBAAycLxpoFKoiPbA2WYq90ATpF7O3Jhg2G7u9N1QjtK4FVWUalm5-rdPH3WqH_yK9IyTS_jqya_akWt481zjJfsZIvpcrGnFbEoKHbUowQVbYdg4_RMS_pERpqs5koK-uAFvdpEUjmMqiY7NZjiBxEdEWK-wefUjfCBSxOJ-Fffaqo6JDWq4Bmjbhp2YT233Cume3q5EmWiEkTYqhCZeG1HL9JdEWMVDMfBDrw56hGeTcDVoNQJe2_yxCc0ia3eXLaVO-UNXBZajgYA'
            },
        })
            .then(response => response.json())
            .then(data => {

                const fullName = `${data.data.firstName} ${data.data.lastName}`;
                document.getElementById('userInfo').textContent = fullName;
            })
            .catch(error => console.error('Error fetching user information:', error));
    </script>

    <script>
        document.getElementById('logoutButton').addEventListener('click', function () {
            // Call the logout API
            fetch('/Auth/Logout', {
                method: 'GET',
            })
                .then(response => {
                    if (response.ok) {
                        // Redirect to the login page after successful logout
                        window.location.href = '/Auth/Login';
                    } else {
                        // Handle errors if needed
                        console.error('Logout failed:', response.status);
                    }
                })
                .catch(error => {
                    // Handle network errors
                    console.error('Network error during logout:', error);
                });
        });
    </script>
    <script>
        window.addEventListener('load', function () {
            document.getElementById('addUserButton').addEventListener('click', function (event) {
                event.preventDefault();

                const firstName = document.getElementById('userFirstName').value;
                const lastName = document.getElementById('userLastName').value;
                const email = document.getElementById('userEmail').value;
                const password = document.getElementById('userPassword').value;
                const phoneNumber = document.getElementById('userPhoneNumber').value;
                const isRegionManager = document.getElementById('isRegionManager').checked;

                console.log('firstname: ', firstName, 'lastname: ', lastName, 'email: ', email, 'password: ', password, 'phone number: ', phoneNumber, 'isRegionManager: ', isRegionManager);

                const requestBody = {
                    FirstName: firstName,
                    LastName: lastName,
                    Email: email,
                    Password: password,
                    PhoneNumber: phoneNumber,
                    IsRegionManager: isRegionManager,
                };

                makeServerRequest(requestBody);
            });
        });

        function makeServerRequest(requestBody) {
            const apiUrl = '/Home/AddUser';

            const fetchOptions = {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(requestBody),
            };

            fetch(apiUrl, fetchOptions)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    if (data) {
                        console.log("User added");
                        window.location.href = '/Home/Settings';
                    } else {
                        console.log('User could not be added');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }
    </script>

    <script>
        function updateClock() {
            var now = new Date();
            var hours = now.getHours().toString().padStart(2, '0');
            var minutes = now.getMinutes().toString().padStart(2, '0');
            var seconds = now.getSeconds().toString().padStart(2, '0');
            var dateStr = now.toLocaleDateString('tr-TR');
            var timeStr = hours + ':' + minutes + ':' + seconds;
            document.getElementById('clock').innerText = dateStr + ' ' + timeStr;
        }

        setInterval(updateClock, 1000);
    </script>
</body>

</html>
